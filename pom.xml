<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath />
	</parent>
	<groupId>io.spring.concourse.artifactoryresource</groupId>
	<artifactId>artifactory-resource</artifactId>
	<version>${revision}</version>
	<properties>
		<revision>0.0.11-SNAPSHOT</revision>
		<java.version>1.8</java.version>
		<artifactory.version>6.9.0</artifactory.version>
		<spring-javaformat.version>0.0.17</spring-javaformat.version>
	</properties>
	<dependencies>
		<!-- Compile -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.module</groupId>
			<artifactId>jackson-module-parameter-names</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-repository-metadata</artifactId>
			<version>3.5.0</version>
		</dependency>
		<!-- Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.palantir.docker.compose</groupId>
			<artifactId>docker-compose-rule-junit4</artifactId>
			<version>0.35.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.xmlunit</groupId>
			<artifactId>xmlunit-core</artifactId>
		</dependency>
	</dependencies>
	<build>
		<finalName>artifactory-resource</finalName>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>io.spring.javaformat</groupId>
					<artifactId>spring-javaformat-maven-plugin</artifactId>
					<version>${spring-javaformat.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>3.0.0</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>8.29</version>
						</dependency>
						<dependency>
							<groupId>io.spring.javaformat</groupId>
							<artifactId>spring-javaformat-checkstyle</artifactId>
							<version>${spring-javaformat.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>com.bazaarvoice.maven.plugins</groupId>
					<artifactId>process-exec-maven-plugin</artifactId>
					<version>0.8</version>
				</plugin>
				<plugin>
					<groupId>com.googlecode.maven-download-plugin</groupId>
					<artifactId>download-maven-plugin</artifactId>
					<version>1.4.1</version>
				</plugin>
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-checkstyle-plugin
										</artifactId>
										<versionRange>
											[2.17,)
										</versionRange>
										<goals>
											<goal>check</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>io.spring.javaformat</groupId>
				<artifactId>spring-javaformat-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<inherited>true</inherited>
						<goals>
							<goal>validate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<executions>
					<execution>
						<id>checkstyle-validation</id>
						<phase>validate</phase>
						<configuration>
							<skip>${disable.checks}</skip>
							<configLocation>src/checkstyle/checkstyle.xml</configLocation>
							<suppressionsLocation>src/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
						</configuration>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/integration/java</source>
							</sources>
						</configuration>
					</execution>
					<execution>
						<id>add-test-resources</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/integration/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<testSourceDirectory>src/integration/java</testSourceDirectory>
					<systemPropertyVariables>
						<artifactoryServer>${artifactoryServer}</artifactoryServer>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerArgs>
						<arg>-parameters</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>palantir</id>
			<url>https://dl.bintray.com/palantir/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>
	<profiles>
		<profile>
			<id>run-local-artifactory</id>
			<properties>
				<artifactoryServer>http://localhost:8081/artifactory</artifactoryServer>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>com.googlecode.maven-download-plugin</groupId>
						<artifactId>download-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>install-artifactory</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>wget</goal>
								</goals>
								<configuration>
									<url>https://dl.bintray.com/jfrog/artifactory/jfrog-artifactory-oss-${artifactory.version}.zip</url>
									<unpack>true</unpack>
									<outputDirectory>${project.build.directory}/artifactory.zip</outputDirectory>
									<sha1>ac953c65ffa4cc76707557f4b8a8039f3e851044</sha1>
									<unpack>true</unpack>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.bazaarvoice.maven.plugins</groupId>
						<artifactId>process-exec-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>start-artifactory</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<name>artifactory</name>
									<workingDir>artifactory.zip/artifactory-oss-${artifactory.version}/</workingDir>
									<healthcheckUrl>http://localhost:8081/artifactory/api/system/ping</healthcheckUrl>
									<waitAfterLaunch>300</waitAfterLaunch>
									<arguments>
										<argument>bin/artifactory.sh</argument>
										<argument>start</argument>
									</arguments>
								</configuration>
							</execution>
							<execution>
								<id>stop-artifactory</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<name>stop-artifactory</name>
									<workingDir>artifactory.zip/artifactory-oss-${artifactory.version}/</workingDir>
									<arguments>
										<argument>bin/artifactory.sh</argument>
										<argument>stop</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
